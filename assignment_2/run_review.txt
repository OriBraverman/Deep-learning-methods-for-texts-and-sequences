part1:
ner:
Epoch 1/25:   0%|          | 0/6393 [00:00<?, ?it/s]C:\src\github.com\OriBraverman\Deep-learning-methods-for-texts-and-sequences\assignment_2\Part_1\tagger1.py:54: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  words, tags = torch.tensor(words).to(device), torch.tensor(tags).to(device)
Epoch 1/25: 100%|██████████| 6393/6393 [00:32<00:00, 198.34it/s]
C:\src\github.com\OriBraverman\Deep-learning-methods-for-texts-and-sequences\assignment_2\Part_1\tagger1.py:90: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  words, tags = torch.tensor(words).to(device), torch.tensor(tags).to(device)
Epoch 2/25:   0%|          | 0/6393 [00:00<?, ?it/s]Epoch 1/25 - Avg. Loss: 0.3810 - Train Accuracy: 0.6256 - Dev Accuracy: 0.5481 - Dev Loss: 0.0020
Epoch 2/25: 100%|██████████| 6393/6393 [00:36<00:00, 174.50it/s]
Epoch 3/25:   0%|          | 0/6393 [00:00<?, ?it/s]Epoch 2/25 - Avg. Loss: 0.1754 - Train Accuracy: 0.8005 - Dev Accuracy: 0.6781 - Dev Loss: 0.0014
Epoch 3/25: 100%|██████████| 6393/6393 [00:35<00:00, 181.88it/s]
Epoch 4/25:   0%|          | 0/6393 [00:00<?, ?it/s]Epoch 3/25 - Avg. Loss: 0.1055 - Train Accuracy: 0.8721 - Dev Accuracy: 0.7303 - Dev Loss: 0.0012
Epoch 4/25: 100%|██████████| 6393/6393 [00:35<00:00, 180.27it/s]
Epoch 5/25:   0%|          | 0/6393 [00:00<?, ?it/s]Epoch 4/25 - Avg. Loss: 0.0711 - Train Accuracy: 0.9151 - Dev Accuracy: 0.7610 - Dev Loss: 0.0011
Epoch 5/25: 100%|██████████| 6393/6393 [00:37<00:00, 172.13it/s]
Epoch 6/25:   0%|          | 0/6393 [00:00<?, ?it/s]Epoch 5/25 - Avg. Loss: 0.0513 - Train Accuracy: 0.9387 - Dev Accuracy: 0.7681 - Dev Loss: 0.0011
Epoch 6/25: 100%|██████████| 6393/6393 [00:36<00:00, 174.38it/s]
Epoch 6/25 - Avg. Loss: 0.0388 - Train Accuracy: 0.9487 - Dev Accuracy: 0.7614 - Dev Loss: 0.0012
Early stopping

pos:
Epoch 1/25:   0%|          | 0/28192 [00:00<?, ?it/s]C:\src\github.com\OriBraverman\Deep-learning-methods-for-texts-and-sequences\assignment_2\Part_1\tagger1.py:54: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  words, tags = torch.tensor(words).to(device), torch.tensor(tags).to(device)
Epoch 1/25: 100%|██████████| 28192/28192 [05:38<00:00, 83.22it/s]
C:\src\github.com\OriBraverman\Deep-learning-methods-for-texts-and-sequences\assignment_2\Part_1\tagger1.py:90: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  words, tags = torch.tensor(words).to(device), torch.tensor(tags).to(device)
Epoch 2/25:   0%|          | 0/28192 [00:00<?, ?it/s]Epoch 1/25 - Avg. Loss: 0.5085 - Train Accuracy: 0.9301 - Dev Accuracy: 0.9180 - Dev Loss: 0.0085
Epoch 2/25: 100%|██████████| 28192/28192 [05:56<00:00, 79.07it/s]
Epoch 3/25:   0%|          | 0/28192 [00:00<?, ?it/s]Epoch 2/25 - Avg. Loss: 0.2043 - Train Accuracy: 0.9524 - Dev Accuracy: 0.9364 - Dev Loss: 0.0064
Epoch 3/25: 100%|██████████| 28192/28192 [06:03<00:00, 77.57it/s]
Epoch 4/25:   0%|          | 0/28192 [00:00<?, ?it/s]Epoch 3/25 - Avg. Loss: 0.1505 - Train Accuracy: 0.9614 - Dev Accuracy: 0.9430 - Dev Loss: 0.0057
Epoch 4/25: 100%|██████████| 28192/28192 [06:04<00:00, 77.35it/s]
Epoch 5/25:   0%|          | 0/28192 [00:00<?, ?it/s]Epoch 4/25 - Avg. Loss: 0.1244 - Train Accuracy: 0.9672 - Dev Accuracy: 0.9467 - Dev Loss: 0.0053
Epoch 5/25: 100%|██████████| 28192/28192 [06:16<00:00, 74.80it/s]
Epoch 6/25:   0%|          | 0/28192 [00:00<?, ?it/s]Epoch 5/25 - Avg. Loss: 0.1079 - Train Accuracy: 0.9711 - Dev Accuracy: 0.9491 - Dev Loss: 0.0053
Epoch 6/25: 100%|██████████| 28192/28192 [08:00<00:00, 58.62it/s]
Epoch 7/25:   0%|          | 0/28192 [00:00<?, ?it/s]Epoch 6/25 - Avg. Loss: 0.0965 - Train Accuracy: 0.9739 - Dev Accuracy: 0.9485 - Dev Loss: 0.0052
Epoch 7/25: 100%|██████████| 28192/28192 [07:24<00:00, 63.38it/s]
Epoch 7/25 - Avg. Loss: 0.0874 - Train Accuracy: 0.9761 - Dev Accuracy: 0.9497 - Dev Loss: 0.0053
Early stopping

part3:
ner:
Epoch 1/25:   0%|          | 0/6393 [00:00<?, ?it/s]C:\src\github.com\OriBraverman\Deep-learning-methods-for-texts-and-sequences\assignment_2\Part_3\tagger2.py:50: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  words, tags = torch.tensor(words).to(device), torch.tensor(tags).to(device)
Epoch 1/25: 100%|██████████| 6393/6393 [03:15<00:00, 32.62it/s]
C:\src\github.com\OriBraverman\Deep-learning-methods-for-texts-and-sequences\assignment_2\Part_3\tagger2.py:85: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  words, tags = torch.tensor(words).to(device), torch.tensor(tags).to(device)
Epoch 2/25:   0%|          | 0/6393 [00:00<?, ?it/s]Epoch 1/25 - Avg. Loss: 0.2173 - Train Accuracy: 0.8511 - Dev Accuracy: 0.7271 - Dev Loss: 0.0050
Epoch 2/25: 100%|██████████| 6393/6393 [03:34<00:00, 29.75it/s]
Epoch 3/25:   0%|          | 0/6393 [00:00<?, ?it/s]Epoch 2/25 - Avg. Loss: 0.0753 - Train Accuracy: 0.9275 - Dev Accuracy: 0.7613 - Dev Loss: 0.0047
Epoch 3/25: 100%|██████████| 6393/6393 [03:35<00:00, 29.65it/s]
Epoch 3/25 - Avg. Loss: 0.0463 - Train Accuracy: 0.9502 - Dev Accuracy: 0.7671 - Dev Loss: 0.0048
Early stopping

pos:
Epoch 1/25:   0%|          | 0/56384 [00:00<?, ?it/s]C:\src\github.com\OriBraverman\Deep-learning-methods-for-texts-and-sequences\assignment_2\Part_3\tagger2.py:50: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  words, tags = torch.tensor(words).to(device), torch.tensor(tags).to(device)
Epoch 1/25: 100%|██████████| 56384/56384 [34:59<00:00, 26.85it/s]
C:\src\github.com\OriBraverman\Deep-learning-methods-for-texts-and-sequences\assignment_2\Part_3\tagger2.py:85: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  words, tags = torch.tensor(words).to(device), torch.tensor(tags).to(device)
Epoch 2/25:   0%|          | 0/56384 [00:00<?, ?it/s]Epoch 1/25 - Avg. Loss: 0.2331 - Train Accuracy: 0.9645 - Dev Accuracy: 0.9480 - Dev Loss: 0.0102
Epoch 2/25: 100%|██████████| 56384/56384 [36:02<00:00, 26.08it/s]
Epoch 3/25:   0%|          | 0/56384 [00:00<?, ?it/s]Epoch 2/25 - Avg. Loss: 0.1175 - Train Accuracy: 0.9715 - Dev Accuracy: 0.9494 - Dev Loss: 0.0101
Epoch 3/25: 100%|██████████| 56384/56384 [35:54<00:00, 26.17it/s]
Epoch 3/25 - Avg. Loss: 0.0962 - Train Accuracy: 0.9759 - Dev Accuracy: 0.9498 - Dev Loss: 0.0106
Early stopping